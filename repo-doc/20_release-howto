Producing a release
===================

Say that you want to produce a release of the 2.6.11 branch.
You'd first check that all the patches apply ok and that everything has been
committed and that your local checkout is up-to-date.

You can run:
# gpdorelease 11

gpdorelease will first check previous tags to discover the release number of
the last 2.6.11 release. If there was no previous release, it will use
"2.6.11-1", but if it (e.g.) found the previous release to be "2.6.11-3" then
it will use a new version of "2.6.11-4".

It will then generate tarballs of the branch, named with the same version tag,
placed into /tmp. These tarballs will then be uploaded to distfiles-local on
woodpecker.


Suggested Workflow
==================

One option is too clone the repo twice, one in a directory called linux-patches 
and the other in a directory called linux-patches-misc.

In linux-patches-misc, do a:

$ git checkout genpatches-misc

Make softlinks to the needed scripts in the linux-patches-misc/scripts direectory,
possibly in /usr/local/bin.

Now you can use linux-patches for the patches, and still have access to the scripts
for creating the releases.

Please don't forget to do a boot test of all kernels before committing a new ebuild.
